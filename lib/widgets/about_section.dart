import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:sunday_sports/shared/extensions.dart';

class AboutSection extends StatelessWidget {
  const AboutSection({super.key});

  @override
  Widget build(BuildContext context) {
    final colorScheme = Theme.of(context).colorScheme;

    return Container(
      constraints: BoxConstraints(
        minHeight: MediaQuery.of(context).size.height,
      ),
      padding: EdgeInsets.symmetric(
          vertical: context.isSmallScreen ? 50 : 80,
          horizontal: context.isSmallScreen ? 15 : 20),
      decoration: BoxDecoration(
        color: colorScheme.surface,
      ),
      child: Column(
        children: [
          Text(
            '3 —á–∞—Å–∞ ‚Äî –∞ —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ –≥–æ–¥—ã',
            style: GoogleFonts.montserrat(
              fontSize: context.isSmallScreen
                  ? 30
                  : context.isMediumScreen
                      ? 36
                      : 42,
              fontWeight: FontWeight.bold,
              color: colorScheme.onSurface,
            ),
            textAlign: TextAlign.center,
          ).animate().fadeIn(duration: 800.ms),

          SizedBox(height: context.isSmallScreen ? 40 : 60),

          // –®–∞–≥–∏ —Ç—Ä–µ–Ω–∏–Ω–≥–∞
          Container(
            constraints: const BoxConstraints(maxWidth: 1000),
            child: _buildTimelineSteps(context),
          ),

          SizedBox(height: context.isSmallScreen ? 40 : 60),

          // –§–æ—Ä–º–∞—Ç—ã
          Container(
            padding: EdgeInsets.all(context.isSmallScreen ? 20 : 30),
            decoration: BoxDecoration(
              color: Colors.white.withOpacity(0.1),
              borderRadius: BorderRadius.circular(20),
            ),
            child: Row(
              children: [
                Icon(
                  Icons.location_on,
                  color: Colors.orange,
                  size: context.isSmallScreen ? 30 : 40,
                ),
                SizedBox(width: context.isSmallScreen ? 15 : 20),
                Expanded(
                  child: Text(
                    '–¢–æ–ª—å–∫–æ –æ—Ñ—Ñ–ª–∞–π–Ω —Ñ–æ—Ä–º–∞—Ç: –ø—Ä–æ–≤–æ–¥–∏–º –≤ –≤–∞—à–µ–º –æ—Ñ–∏—Å–µ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ.',
                    style: GoogleFonts.montserrat(
                      fontSize: context.isSmallScreen ? 16 : 18,
                      fontWeight: FontWeight.w500,
                      color: colorScheme.onSurface,
                      height: 1.5,
                    ),
                  ),
                ),
              ],
            ),
          ).animate().fadeIn(duration: 800.ms, delay: 600.ms),

          SizedBox(height: context.isSmallScreen ? 30 : 40),

          // –ö–æ–º—É —ç—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç (–∏–∑ –±–ª–æ–∫–∞ 4)
          Column(
            children: [
              Text(
                '–ö–∞–∂–¥–æ–º—É, –∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–¥—å–º–∏',
                style: GoogleFonts.montserrat(
                  fontSize: context.isSmallScreen
                      ? 24
                      : context.isMediumScreen
                          ? 28
                          : 32,
                  fontWeight: FontWeight.w600,
                  color: colorScheme.onSurface,
                ),
                textAlign: TextAlign.center,
              ).animate().fadeIn(duration: 800.ms, delay: 800.ms),
              SizedBox(height: context.isSmallScreen ? 30 : 40),
              LayoutBuilder(
                builder: (context, constraints) {
                  final isWideScreen = constraints.maxWidth > 600;

                  if (isWideScreen) {
                    return Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Expanded(
                            child: _buildTargetCard(context, 'üíº –ú–µ–Ω–µ–¥–∂–µ—Ä–∞–º',
                                '—É—á–∞—Ç—Å—è —É–±–µ–∂–¥–∞—Ç—å, –≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã, —Å—Ç—Ä–æ–∏—Ç—å –¥–æ–≤–µ—Ä–∏–µ.')),
                        const SizedBox(width: 20),
                        Expanded(
                            child: _buildTargetCard(context, 'üë®‚Äçüíª –ê–π—Ç–∏—à–Ω–∏–∫–∞–º',
                                '–ø—Ä–æ–∫–∞—á–∏–≤–∞—é—Ç –∫—Ä–∞—Ç–∫–æ—Å—Ç—å, —á—ë—Ç–∫–æ—Å—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫.')),
                      ],
                    );
                  } else {
                    return Column(
                      children: [
                        _buildTargetCard(context, 'üíº –ú–µ–Ω–µ–¥–∂–µ—Ä–∞–º',
                            '—É—á–∞—Ç—Å—è —É–±–µ–∂–¥–∞—Ç—å, –≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã, —Å—Ç—Ä–æ–∏—Ç—å –¥–æ–≤–µ—Ä–∏–µ.'),
                        const SizedBox(height: 20),
                        _buildTargetCard(context, 'üë®‚Äçüíª –ê–π—Ç–∏—à–Ω–∏–∫–∞–º',
                            '–ø—Ä–æ–∫–∞—á–∏–≤–∞—é—Ç –∫—Ä–∞—Ç–∫–æ—Å—Ç—å, —á—ë—Ç–∫–æ—Å—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫.'),
                      ],
                    );
                  }
                },
              ),
              const SizedBox(height: 20),
              LayoutBuilder(
                builder: (context, constraints) {
                  final isWideScreen = constraints.maxWidth > 600;

                  if (isWideScreen) {
                    return Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Expanded(
                            child: _buildTargetCard(context, 'üìä –ü—Ä–æ–¥–∞–∂–Ω–∏–∫–∞–º',
                                '—É—á–∞—Ç—Å—è –ø–æ–Ω–∏–º–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤, –≤–∏–¥–µ—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Å–∏–≥–Ω–∞–ª—ã.')),
                        const SizedBox(width: 20),
                        Expanded(
                            child: _buildTargetCard(
                                context,
                                'üéØ –¢–æ–ø-–º–µ–Ω–µ–¥–∂–µ—Ä–∞–º',
                                '–≤—ã—è–≤–ª—è—é—Ç —Å–∫—Ä—ã—Ç—ã—Ö –ª–∏–¥–µ—Ä–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ.')),
                      ],
                    );
                  } else {
                    return Column(
                      children: [
                        _buildTargetCard(context, 'üìä –ü—Ä–æ–¥–∞–∂–Ω–∏–∫–∞–º',
                            '—É—á–∞—Ç—Å—è –ø–æ–Ω–∏–º–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤, –≤–∏–¥–µ—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Å–∏–≥–Ω–∞–ª—ã.'),
                        const SizedBox(height: 20),
                        _buildTargetCard(context, 'üéØ –¢–æ–ø-–º–µ–Ω–µ–¥–∂–µ—Ä–∞–º',
                            '–≤—ã—è–≤–ª—è—é—Ç —Å–∫—Ä—ã—Ç—ã—Ö –ª–∏–¥–µ—Ä–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ.'),
                      ],
                    );
                  }
                },
              ),
            ],
          ).animate().fadeIn(duration: 800.ms, delay: 1000.ms),
        ],
      ),
    );
  }

  Widget _buildTimelineSteps(BuildContext context) {
    final steps = [
      _TimelineStep(
        number: '1Ô∏è‚É£',
        title: '–í–≤–æ–¥–Ω–∞—è —á–∞—Å—Ç—å',
        description: '20 –º–∏–Ω—É—Ç, –æ–±—ä—è—Å–Ω—è–µ–º –º–µ—Ö–∞–Ω–∏–∫—É, –≤–∫–ª—é—á–∞–µ–º –≤ –ø—Ä–æ—Ü–µ—Å—Å.',
      ),
      _TimelineStep(
        number: '2Ô∏è‚É£',
        title: '–ò–≥—Ä—ã',
        description: '3-4 —Ä–∞—É–Ω–¥–∞, –∫–∞–∂–¥—ã–π —Å–ª–æ–∂–Ω–µ–µ, —á–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π.',
      ),
      _TimelineStep(
        number: '3Ô∏è‚É£',
        title: '–†–∞–∑–±–æ—Ä',
        description: '–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã, –æ–±—Å—É–∂–¥–∞–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.',
      ),
      _TimelineStep(
        number: '4Ô∏è‚É£',
        title: '–í—ã–≤–æ–¥—ã',
        description: '—á—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏.',
      ),
    ];

    return LayoutBuilder(
      builder: (context, constraints) {
        final isWideScreen = context.isSmallScreen ? false : true;

        if (isWideScreen) {
          return Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: steps.map((step) {
              final index = steps.indexOf(step);
              return Expanded(
                child: Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Expanded(
                        child: _buildTimelineStepCard(context, step, index)),
                    if (index < steps.length - 1)
                      Container(
                        width: 20,
                        height: 2,
                        margin: EdgeInsets.only(top: 35),
                        color: Colors.grey.withOpacity(0.5),
                      ),
                  ],
                ),
              );
            }).toList(),
          );
        } else {
          return Column(
            children: steps.map((step) {
              final index = steps.indexOf(step);
              return Column(
                children: [
                  _buildTimelineStepCard(context, step, index),
                  if (index < steps.length - 1)
                    Container(
                      width: 2,
                      height: 30,
                      margin: EdgeInsets.symmetric(vertical: 10),
                      color: Colors.grey.withOpacity(0.5),
                    ),
                ],
              );
            }).toList(),
          );
        }
      },
    );
  }

  Widget _buildTimelineStepCard(
      BuildContext context, _TimelineStep step, int index) {
    final colorScheme = Theme.of(context).colorScheme;

    return Container(
      padding: EdgeInsets.all(context.isSmallScreen ? 15 : 20),
      margin: EdgeInsets.all(context.isSmallScreen ? 3 : 5),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.1),
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: Colors.white.withOpacity(0.2),
        ),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            step.number,
            style: GoogleFonts.montserrat(
              fontSize: context.isSmallScreen ? 24 : 32,
              fontWeight: FontWeight.bold,
              color: colorScheme.primary,
            ),
          ),
          SizedBox(height: context.isSmallScreen ? 5 : 10),
          Text(
            step.title,
            style: GoogleFonts.montserrat(
              fontSize: context.isSmallScreen ? 18 : 20,
              fontWeight: FontWeight.bold,
              color: colorScheme.onSurface,
            ),
          ),
          SizedBox(height: context.isSmallScreen ? 5 : 10),
          Text(
            step.description,
            style: GoogleFonts.montserrat(
              fontSize: context.isSmallScreen ? 14 : 16,
              color: colorScheme.onSurface.withOpacity(0.8),
              height: 1.5,
            ),
          ),
        ],
      ),
    )
        .animate()
        .fadeIn(
          delay: Duration(milliseconds: 200 * index),
          duration: Duration(milliseconds: 800),
        )
        .slideY(
          begin: 0.2,
          end: 0,
          delay: Duration(milliseconds: 200 * index),
          duration: Duration(milliseconds: 800),
        );
  }

  Widget _buildTargetCard(
      BuildContext context, String title, String description) {
    final colorScheme = Theme.of(context).colorScheme;

    return Container(
      padding: EdgeInsets.all(context.isSmallScreen ? 15 : 20),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.1),
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: Colors.white.withOpacity(0.2),
        ),
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Expanded(
            child: RichText(
              text: TextSpan(
                children: [
                  TextSpan(
                    text: '$title ‚Äî ',
                    style: GoogleFonts.montserrat(
                      fontSize: context.isSmallScreen ? 16 : 18,
                      fontWeight: FontWeight.bold,
                      color: colorScheme.onSurface,
                    ),
                  ),
                  TextSpan(
                    text: description,
                    style: GoogleFonts.montserrat(
                      fontSize: context.isSmallScreen ? 16 : 18,
                      color: colorScheme.onSurface.withOpacity(0.8),
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class _TimelineStep {
  final String number;
  final String title;
  final String description;

  _TimelineStep({
    required this.number,
    required this.title,
    required this.description,
  });
}
